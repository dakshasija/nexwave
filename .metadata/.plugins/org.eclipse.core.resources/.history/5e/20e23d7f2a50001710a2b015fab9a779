package com.multi.level3;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;

public class Read_Write_Lock_Ex {

	static ReadWriteLock lock = new ReentrantReadWriteLock();

	public static void main(String[] args) {

		// Map<String, String> map = new HashMap<>();
		List<String> list = new ArrayList<>();

		Runnable writeTask = () -> {
			try {

			} finally {

			}
		};

		Runnable readTask = () -> {
			System.out.println("read - start");
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			System.out.println(list);
			System.out.println("read - end");
		};

		ExecutorService executorService = Executors.newFixedThreadPool(5);
		executorService.execute(writeTask);
		executorService.execute(writeTask);
		executorService.execute(readTask);
		executorService.execute(readTask);
		executorService.execute(readTask);
		executorService.execute(readTask);

	}

}
